---
import Layout from "../layouts/Layout.astro";
import BlogHeader from "../components/BlogHeader.astro";
import Footer from "../components/Footer.astro";
import { BLOG_SITE_TITLE, BLOG_SITE_DESCRIPTION  } from "../config";
import type { Article } from "../types/Article";
import ExternalLinkIcon from "../assets/external-link.svg";
import ZennIcon from "../assets/zenn-icon.svg";
import QiitaIcon from "../assets/qiita-icon.png";
import HatenaIcon from "../assets/hatena-icon.svg";
import { Image } from "astro:assets";
import { getAllOuterPosts } from "../lib/GetAllOuterPosts";
import AstroLink from "../components/AstroLink.astro";
import { getCollection } from "astro:content";
import { fade } from "astro:transitions";

const blogEntries = await getCollection("posts", ({ data }) => {
  return data.draft !== true;
});
const mySiteArticles: Article[] = blogEntries.map(({ slug, data }) => {
  return {
    title: data.title,
    url: `/posts/${slug}/`,
    pubDate: data.pubDate,
    isMySite: true,
    slug,
    hostname: Astro.site?.hostname ?? Astro.url.hostname ?? "",
  };
});
const outerPosts = await getAllOuterPosts();
const allPosts = [...mySiteArticles, ...outerPosts];
allPosts.sort(
  (a, b) => new Date(b.pubDate).valueOf() - new Date(a.pubDate).valueOf()
);
---

<Layout title={BLOG_SITE_TITLE} description={BLOG_SITE_DESCRIPTION}>
  <BlogHeader title={BLOG_SITE_TITLE} description={BLOG_SITE_DESCRIPTION} />
  <main transition:animate={fade({ duration: '0.5s' })}>
    <section class="section">
      <div class="posts-container">
        {
          allPosts.map((post) => (
            <div class="post-card">
              {post.isMySite ? (
                <>
                  <time datetime={post.pubDate} class="post-date" transition:name={"blog-pub-date-" + post.slug}>
                    {new Date(post.pubDate).toLocaleDateString("ja-jp", {
                      year: "numeric",
                      month: "short",
                      day: "numeric",
                    })}
                  </time>
                  <h3 class="post-title">
                    <AstroLink href={post.url} transition:name={"blog-title-" + post.slug}>{post.title}</AstroLink>
                  </h3>
                  <div class="post-source internal">
                    <span>ブログ記事</span>
                  </div>
                </>
              ) : (
                <>
                  <time datetime={post.pubDate} class="post-date">
                    {new Date(post.pubDate).toLocaleDateString("ja-jp", {
                      year: "numeric",
                      month: "short",
                      day: "numeric",
                    })}
                  </time>
                  <h3 class="post-title">
                    <a href={post.url} target="_blank" rel="noopener">
                      {post.title}
                    </a>
                  </h3>
                  <div class="post-source external">
                    <span>外部記事</span>
                    <div class="post-icons">
                      <Image
                        src={ExternalLinkIcon}
                        width={16}
                        height={16}
                        alt="外部リンク"
                      />
                      {
                        post.hostname === 'zenn.dev' && (
                          <Image
                            src={ZennIcon}
                            width={16}
                            height={16}
                            alt="外部リンクZenn"
                            class="source-icon"
                          />
                        ) || 
                        post.hostname === 'qiita.com' && (
                          <Image
                            src={QiitaIcon}
                            width={16}
                            height={16}
                            alt="外部リンクQiita"
                            class="source-icon"
                          />
                        ) || (
                          post.hostname === 'komura-c.hatenablog.com' || 
                          post.hostname === 'tech-blog.voicy.jp' 
                        ) && (
                          <Image
                            src={HatenaIcon}
                            width={16}
                            height={16}
                            alt="外部リンクHatena"
                            class="source-icon"
                          />
                        )
                      }
                    </div>
                  </div>
                </>
              )}
            </div>
          ))
        }
      </div>
    </section>
  </main>
  <Footer />
</Layout>

<style lang="scss">
  @use "../styles/mixins.scss" as mx;
  
  .section {
    margin: 0 auto;
    max-width: 1100px;
    padding: 30px 16px;
    
    .posts-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 24px;
      
      @include mx.sp {
        grid-template-columns: 1fr;
      }
    }
    
    .post-card {
      background-color: var(--background-color);
      border-radius: 8px;
      padding: 20px;
      box-shadow: var(--card-shadow);
      transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease;
      display: flex;
      flex-direction: column;
      height: 100%;
      border: 1px solid var(--border-color);
      
      &:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
      }
      
      .post-date {
        font-size: 14px;
        color: var(--text-light);
        margin-bottom: 10px;
        font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
      }
      
      .post-title {
        font-size: 18px;
        margin: 0 0 15px 0;
        line-height: 1.4;
        flex-grow: 1;
        
        a {
          color: var(--text-color);
          transition: color var(--transition-speed) ease;
          
          &:hover {
            color: var(--primary-color);
          }
          
          &:visited {
            color: var(--primary-dark);
          }
        }
      }
      
      .post-source {
        display: flex;
        align-items: center;
        justify-content: space-between;
        font-size: 13px;
        margin-top: auto;
        padding-top: 10px;
        border-top: 1px solid var(--border-color);
        
        span {
          padding: 3px 8px;
          border-radius: 4px;
          font-weight: 500;
        }
        
        &.internal span {
          background-color: rgba(var(--primary-color-rgb, 74, 111, 165), 0.1);
          color: var(--primary-color);
        }
        
        &.external {
          span {
            background-color: rgba(var(--accent-color-rgb, 255, 126, 95), 0.1);
            color: var(--accent-color);
          }
          
          .post-icons {
            display: flex;
            align-items: center;
            gap: 8px;
            
            .source-icon {
              opacity: 0.8;
            }
          }
        }
      }
    }
  }
</style>
