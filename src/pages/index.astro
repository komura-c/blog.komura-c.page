---
import Layout from "../layouts/Layout.astro";
import BlogHeader from "../components/BlogHeader.astro";
import Footer from "../components/Footer.astro";
import { BLOG_SITE_TITLE, BLOG_SITE_DESCRIPTION  } from "../config";
import type { Article } from "../types/Article";
import ExternalLinkIcon from "../assets/external-link.svg";
import ZennIcon from "../assets/zenn-icon.svg";
import QiitaIcon from "../assets/qiita-icon.png";
import HatenaIcon from "../assets/hatena-icon.svg";
import { Image } from "astro:assets";
import { getAllOuterPosts } from "../lib/GetAllOuterPosts";
import AstroLink from "../components/AstroLink.astro";
import { getCollection } from "astro:content";
import { fade } from "astro:transitions";

const blogEntries = await getCollection("posts", ({ data }) => {
  return data.draft !== true;
});
const mySiteArticles: Article[] = blogEntries.map(({ slug, data }) => {
  return {
    title: data.title,
    url: `/posts/${slug}/`,
    pubDate: data.pubDate,
    isMySite: true,
    slug,
    hostname: Astro.site?.hostname ?? Astro.url.hostname ?? "",
  };
});
const outerPosts = await getAllOuterPosts();
const allPosts = [...mySiteArticles, ...outerPosts];
allPosts.sort(
  (a, b) => new Date(b.pubDate).valueOf() - new Date(a.pubDate).valueOf()
);
---

<Layout title={BLOG_SITE_TITLE} description={BLOG_SITE_DESCRIPTION}>
  <BlogHeader title={BLOG_SITE_TITLE} description={BLOG_SITE_DESCRIPTION} />
  <main transition:animate={fade({ duration: '0.5s' })}>
    <section class="section">
      <ul class="post-list">
        {
          allPosts.map((post) => (
            <li class="post-item">
              {post.isMySite ? (
                <div class="post-card">
                  <time datetime={post.pubDate} transition:name={"blog-pub-date-" + post.slug} class="post-date">
                    {new Date(post.pubDate).toLocaleDateString("ja-jp", {
                      year: "numeric",
                      month: "short",
                      day: "numeric",
                    })}
                  </time>
                  <AstroLink href={post.url} transition:name={"blog-title-" + post.slug} class="post-title">{post.title}</AstroLink>
                </div>
              ) : (
                <div class="post-card external">
                  <time datetime={post.pubDate} class="post-date">
                    {new Date(post.pubDate).toLocaleDateString("ja-jp", {
                      year: "numeric",
                      month: "short",
                      day: "numeric",
                    })}
                  </time>
                  <a href={post.url} target="_blank" rel="noopener" class="post-title">
                    {post.title}
                    <span class="external-icon">
                      <Image
                        src={ExternalLinkIcon}
                        width={16}
                        height={16}
                        alt="外部リンク"
                      />
                    </span>
                    {
                      post.hostname === 'zenn.dev' && (
                        <span class="source-icon">
                          <Image
                            src={ZennIcon}
                            width={16}
                            height={16}
                            alt="外部リンクZenn"
                          />
                        </span>
                      ) || 
                      post.hostname === 'qiita.com' && (
                        <span class="source-icon">
                          <Image
                            src={QiitaIcon}
                            width={16}
                            height={16}
                            alt="外部リンクQiita"
                          />
                        </span>
                      ) || (
                        post.hostname === 'komura-c.hatenablog.com' || 
                        post.hostname === 'tech-blog.voicy.jp' 
                      ) && (
                        <span class="source-icon">
                          <Image
                            src={HatenaIcon}
                            width={16}
                            height={16}
                            alt="外部リンクHatena"
                          />
                        </span>
                      )
                    }
                  </a>
                </div>
              )}
            </li>
          ))
        }
      </ul>
    </section>
  </main>
  <Footer />
</Layout>

<style lang="scss">
  @use "../styles/mixins.scss" as mx;
  
  .section {
    margin: 0 auto;
    max-width: 910px;
    padding: var(--spacing-md) var(--spacing-md);
  }
  
  .post-list {
    padding: 0;
    list-style-type: none;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: var(--spacing-md);
    
    @include mx.sp {
      grid-template-columns: 1fr;
    }
  }
  
  .post-item {
    margin: 0;
  }
  
  .post-card {
    background-color: var(--color-card-background);
    border-radius: var(--border-radius);
    padding: var(--spacing-md);
    box-shadow: var(--box-shadow);
    display: flex;
    flex-direction: column;
    height: 100%;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid var(--color-border);
    
    &:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }
    
    &.external {
      border-left: 4px solid var(--color-secondary);
    }
  }
  
  .post-date {
    flex: 0 0 auto;
    color: var(--color-text-light);
    font-size: 14px;
    margin-bottom: var(--spacing-sm);
  }
  
  .post-title {
    display: block;
    font-size: 18px;
    font-weight: 500;
    margin-top: auto;
    line-height: 1.4;
    
    &:visited {
      color: #8e32dc;
    }
  }
  
  .external-icon, .source-icon {
    display: inline-block;
    vertical-align: middle;
    margin-left: var(--spacing-xs);
  }
</style>
